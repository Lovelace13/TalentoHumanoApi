// <auto-generated />
using System;
using DBEmpresa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBEmpresa.Migrations
{
    [DbContext(typeof(NTSContext))]
    [Migration("20240516011647_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBEmpresa.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoID"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DepartamentoID");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("DBEmpresa.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoID"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("RolEmpleadoID")
                        .HasColumnType("int");

                    b.Property<int>("SubDepartamentoID")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("DepartamentoID");

                    b.HasIndex("RolEmpleadoID");

                    b.HasIndex("SubDepartamentoID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("DBEmpresa.Models.RolEmpleado", b =>
                {
                    b.Property<int>("RolEmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolEmpleadoID"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RolEmpleadoID");

                    b.ToTable("RolesEmpleados");
                });

            modelBuilder.Entity("DBEmpresa.Models.SubDepartamento", b =>
                {
                    b.Property<int>("SubDepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubDepartamentoID"), 1L, 1);

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SubDepartamentoID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("Subdepartamentos");
                });

            modelBuilder.Entity("DBEmpresa.Models.Sueldo", b =>
                {
                    b.Property<int>("SueldoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SueldoID"), 1L, 1);

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SueldoID");

                    b.HasIndex("EmpleadoID");

                    b.ToTable("Sueldos");
                });

            modelBuilder.Entity("DBEmpresa.Models.Empleado", b =>
                {
                    b.HasOne("DBEmpresa.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBEmpresa.Models.RolEmpleado", "RolEmpleado")
                        .WithMany()
                        .HasForeignKey("RolEmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBEmpresa.Models.SubDepartamento", "Subdepartamento")
                        .WithMany()
                        .HasForeignKey("SubDepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("RolEmpleado");

                    b.Navigation("Subdepartamento");
                });

            modelBuilder.Entity("DBEmpresa.Models.SubDepartamento", b =>
                {
                    b.HasOne("DBEmpresa.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("DBEmpresa.Models.Sueldo", b =>
                {
                    b.HasOne("DBEmpresa.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });
#pragma warning restore 612, 618
        }
    }
}
